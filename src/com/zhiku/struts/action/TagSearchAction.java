/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhiku.struts.action;

import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.zhiku.file.FileDAO;
import com.zhiku.file.FileView;
import com.zhiku.util.Data;
import com.zhiku.util.RMessage;

/** 
 * MyEclipse Struts
 * Creation date: 06-15-2018
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class TagSearchAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setContentType("application/json;charset=utf-8");
		response.setHeader("pragme", "no-cache");
		PrintWriter out = null;
		
		RMessage rmsg = new RMessage();
		try{
			out = response.getWriter();
			
			String kw = request.getParameter("kw");
			int page = Integer.parseInt(request.getParameter("page"));
			List<FileView> filelist = null;
			
			filelist = FileDAO.tagSearch(kw, page);
			
			
			//设置返回的data信息
			List<Data> data = new ArrayList<Data>();
			
			//为空时直接返回
			if(filelist != null){
				Data d = null;
				for(FileView f : filelist){
					d = new Data();
					d.put("fid", f.getFid());
					d.put("upuid", f.getUid());
					
					Data fileinfo = new Data();
					fileinfo.put("name", f.getName());
					fileinfo.put("module", f.getModule());
					fileinfo.put("course", f.getCname());
					fileinfo.put("docformat", f.getDocformat());
					fileinfo.put("origin", f.getOrigin());
					fileinfo.put("uptime", new SimpleDateFormat("yyyy-MM-dd HH:mm").format(f.getUptime()));
					fileinfo.put("desc", f.getDescs());
					fileinfo.put("dncnt", f.getDncnt());
					d.put("fileinfo", fileinfo);
					
					Data upperinfo = new Data();
					upperinfo.put("nickname", f.getNick());
					upperinfo.put("xname", f.getXname());
					upperinfo.put("mname", f.getMname());
					d.put("upperinfo", upperinfo);
					
					data.add(d);
				}
			}
			
			rmsg.setStatus(200);
			rmsg.setMessage("OK");
			rmsg.setData(data);
			out.write(RMessage.getJson(rmsg));
			
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			out.flush();
			out.close();
		}
		return null;
	}
}