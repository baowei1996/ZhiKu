/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhiku.struts.action;

import java.io.PrintWriter;
import java.util.Calendar;
import java.util.Date;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.codec.digest.DigestUtils;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.zhiku.token.Token;
import com.zhiku.user.User;
import com.zhiku.util.Data;
import com.zhiku.util.RMessage;

/** 
 * MyEclipse Struts
 * Creation date: 08-21-2017
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class LoginAction extends Action {
	
	//有效时间为30分钟
	public static final int OVER_TIME  = 30;
	
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setContentType("application/json;charset=utf-8");
		response.setHeader("pragme", "no-cache");
		response.setHeader("Access-Control-Allow-Credentials", "true");
		response.setHeader("Access-Control-Allow-Origin", request.getHeader("Origin"));
		PrintWriter out = null;
		
		RMessage rmsg = new RMessage();
		try{
			out = response.getWriter();
			
			String usr = request.getParameter("username");
			String pwd = DigestUtils.md5Hex(request.getParameter("password"));
			
			if(User.check(usr, pwd)){
				User u = User.findByUsr(usr);
				if (u == null){
					u = User.findByMail(usr);
				}
				if(u.getStatus() == User.NORMAL){
					rmsg.setStatus(200);
					rmsg.setMessage("OK");
					
//					//将uid的值放到session中
//					HttpSession session = request.getSession();
//					session.setMaxInactiveInterval(OVER_TIME);	//设置session的有效时间为30min
//					session.setAttribute("uid", u.getUid());
					
					//设置token信息
					Data payload = new Data();
					payload.put("uid", u.getUid());
					Date current = new Date();
					payload.put("iat", current);
					Calendar c = Calendar.getInstance();
					c.setTime(current);
					c.add(Calendar.MINUTE, OVER_TIME);
					payload.put("exp", c.getTime());
					String token = Token.getToken(payload);
					//将token放入返回数据中
					Data data = new Data();
					data.put("token", token);
					rmsg.setData(data);
					
					//设置cookie信息
					Cookie cookie = new Cookie("username",u.getUsr());
					cookie.setMaxAge(OVER_TIME*60);
					cookie.setPath(request.getContextPath());
					response.addCookie(cookie);
				}else if(u.getStatus() == User.UNACTIVE){
					rmsg.setStatus(300);
					rmsg.setMessage("抱歉，邮箱未激活!");
				}else {
					rmsg.setStatus(300);
					rmsg.setMessage("抱歉，你的用户已经被禁，请联系管理员!");
				}
			}else{
				rmsg.setStatus(300);
				rmsg.setMessage("用户名或密码不正确!");
			}
			
			out.write(RMessage.getJson(rmsg));
			
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			out.flush();
			out.close();
		}
		return null;
	}
}