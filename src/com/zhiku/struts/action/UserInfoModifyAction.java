/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhiku.struts.action;

import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.codec.digest.DigestUtils;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.zhiku.user.User;
import com.zhiku.util.RMessage;

/** 
 * MyEclipse Struts
 * Creation date: 09-01-2017
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class UserInfoModifyAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setContentType("application/json;charset=utf-8");
		response.setHeader("pragme", "no-cache");
		PrintWriter out = null;
		
		RMessage rmsg = new RMessage();
		try{
			out = response.getWriter();
			
			//获取用户的session，判断用户的登录状态
			HttpSession session = request.getSession();
			int uid = session.getAttribute("uid")==null?-1:(Integer)session.getAttribute("uid");
			
			if (uid == -1){
				rmsg.setStatus(300);
				rmsg.setMessage("请先登录!");
				out.write(RMessage.getJson(rmsg));
				return null;
			}
			
			String url = request.getRequestURL().toString();
			//根据URL获取username
			String username = url.substring(url.lastIndexOf("/")+1, url.lastIndexOf("."));
			//根据username找到当前用户的信息
			User u = User.findByUsr(username);
			if(u == null || u.getUid() != uid){
				rmsg.setStatus(300);
				rmsg.setMessage("no such user!");
				out.write(RMessage.getJson(rmsg));
				return null;
			}
			
			//获取前端的信息
			String oldpwd = request.getParameter("oldpwd");
			if(u.getPwd().equals(DigestUtils.md5Hex(oldpwd))){	//如果密码验证正确，继续信息修改的操作
				//获取剩下的信息
				String nickname = request.getParameter("nickname") == null?"":request.getParameter("nickname");
				String newpwd = request.getParameter("newpwd") == null?oldpwd:request.getParameter("newpwd");
//				String avator = request.getParameter("avator");
				String phone = request.getParameter("phone") == null?"":request.getParameter("phone");
				String qq = request.getParameter("qq") == null?"":request.getParameter("qq");
				int xid;
				int mid;
				try {
					xid = Integer.parseInt(request.getParameter("xid"));
					mid = Integer.parseInt(request.getParameter("mid"));
				} catch (NumberFormatException nfe) {
					xid = -1;
					mid = -1;
					nfe.printStackTrace();
				}
				
				//设置这些信息
				if(!("".equals(nickname))){
					u.setNick(nickname);
				}
				if(newpwd != null){
					if(newpwd.length()>5 && newpwd.length() <19){
						u.setPwd(DigestUtils.md5Hex(newpwd));
					}else{
						rmsg.setStatus(300);
						rmsg.setMessage("密码长度要求6到18位!");
						out.write(RMessage.getJson(rmsg));
						return null;
					}
				}
//				if(avator != null){
//				u.setAvator(avator);
//				}
				if(phone !=  null && phone.matches("\\d{11}")){
					u.setPhone(phone);
				}
				if(qq != null && qq.matches("\\d+")){
					u.setQq(qq);
				}
				if(xid != -1 && mid != -1){
					u.setXid(xid);
					u.setMid(mid);
				}
				
				if(u.modify()){
					rmsg.setStatus(200);
					rmsg.setMessage("OK");
				}else{
					rmsg.setStatus(300);
					rmsg.setMessage("发生了一个意料之外的错误，请重试!");
				}
				
			}else{
				rmsg.setStatus(300);
				rmsg.setMessage("用户密码不正确!");
			}
			
			out.write(RMessage.getJson(rmsg));
			
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			out.flush();
			out.close();
		}
		return null;
	}
}