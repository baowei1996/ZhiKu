/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhiku.struts.action;

import java.io.PrintWriter;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.zhiku.DB.Transaction;
import com.zhiku.file.JFile;
import com.zhiku.user.User;
import com.zhiku.util.Data;
import com.zhiku.util.FileUpDownLoad;
import com.zhiku.util.RMessage;

/** 
 * MyEclipse Struts
 * Creation date: 08-24-2017
 * 
 * 用来处理文件上传的请求
 * 首先要验证用户的登录情况，登录后才可以继续上传
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class FileUploadAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		response.setContentType("application/json;charset=utf-8");
		response.setHeader("pragme", "no-cache");
		response.setHeader("Access-Control-Allow-Credentials", "true");
		RMessage rmsg = new RMessage();
		PrintWriter out = null;
		
		try{
			out = response.getWriter();
			
			//获取用户的session，判断用户的登录状态
			HttpSession session = request.getSession();
			int uid = session.getAttribute("uid")==null?-1:(Integer)session.getAttribute("uid");
			
			if (uid == -1){
				rmsg.setStatus(300);
				rmsg.setMessage("需要登录才可上传文件!");
				out.write(RMessage.getJson(rmsg));;
				return null;
			}
			
			FileUpDownLoad fileUpload = new FileUpDownLoad();
			Data data = fileUpload.upload(this.getServlet(), request,FileUpDownLoad.FILE_UPLOAD_PATH);
			
			
			if((Integer)data.get("result") == FileUpDownLoad.SUCCESS){
				JFile file = new JFile();
				
				//依据后缀名判断是否符合要求
				String fileExtName = (String)data.get("fileExtName");
				if(fileExtName.matches("doc(x)?")){
					file.setDocformat(JFile.TYPE_DOC);
				}else{
					if(fileExtName.matches("ppt(x)?")){
						file.setDocformat(JFile.TYPE_PPT);
					}else{
						if(fileExtName.matches("xls(x)?")){
							file.setDocformat(JFile.TYPE_XSL);
						}else{
							if(fileExtName.matches("pdf")){
								file.setDocformat(JFile.TYPE_PDF);
							}else{
								file.setDocformat(-1);
								rmsg.setStatus(300);
								rmsg.setMessage("抱歉 , 目前仅接受 doc(x),xsl(x),ppt(x),pdf 类型文件!");
								out.write(RMessage.getJson(rmsg));
								return null;
							}
						}
					}
				}
				
				//获取文件的相关属性
//				int module = Integer.parseInt((String)data.get("module"));
				String username = (String)data.get("upusername");
				User u = User.findByUid(uid);
				if(u == null || !u.getUsr().equals(username) || u.getStatus() == User.LOCKED){
					rmsg.setStatus(300);
					rmsg.setMessage("用户异常或用户被禁!");
					out.write(RMessage.getJson(rmsg));
					return null;
				}

				int origin = Integer.parseInt((String)data.get("origin"));
				String descs = (String)data.get("desc");
				String teacher = (String)data.get("teacher");
				int course = Integer.parseInt((String)data.get("course"));
				String sha256 = (String)data.get("sha256");
				
				file.setName((String)data.get("filename"));
				file.setPath((String)data.get("savePath"));
				file.setSha(sha256);
//				file.setModule(module);
				file.setCourse(course);
				file.setTeacher(teacher);
				file.setStatus(JFile.NORMAL);	//暂时统一规定文件为normal状态，之后添加验证时再修改
				file.setUptime(new Date());
				file.setUpuid(uid);
				file.setOrigin(origin);
				file.setDescs(descs);
				file.setFileformat(fileExtName);
				
				
				String opip = request.getHeader("x-forwarded-for") == null? request.getRemoteAddr():request.getHeader("x-forwarded-for");
				if(Transaction.saveUploadInfo(file, u, opip)){
					rmsg.setStatus(200);
					rmsg.setMessage("OK");
				}else{
					rmsg.setStatus(300);
					rmsg.setMessage("发生了一个预期以外的错误，请重试!");
				}
			}else{
				rmsg.setStatus(300);
				rmsg.setMessage((String)data.get("message"));
			}
			
			out.write(RMessage.getJson(rmsg));
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			out.flush();
			out.close();
		}
		return null;
	}
}