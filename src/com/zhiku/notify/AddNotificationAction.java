/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhiku.notify;

import java.io.PrintWriter;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.zhiku.user.User;
import com.zhiku.util.RMessage;

/** 
 * MyEclipse Struts
 * Creation date: 05-08-2018
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class AddNotificationAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		response.setContentType("application/json;charset=utf-8");
		response.setHeader("pragme", "no-cache");
		response.setHeader("Access-Control-Allow-Credentials", "true");
		response.setHeader("Access-Control-Allow-Origin", request.getHeader("Origin"));
		PrintWriter out = null;
		
		RMessage rmsg = new RMessage();
		try{
			out = response.getWriter();
			
			//获取用户的session，判断用户的登录状态
			HttpSession session = request.getSession();
			int uid ;
			try{
				uid = session.getAttribute("uid")==null?-1:(Integer)session.getAttribute("uid");
			}catch(Exception e){
				uid = -1;
			}
			
			if (uid == -1){
				rmsg.setStatus(300);
				rmsg.setMessage("请先登录!");
				out.write(RMessage.getJson(rmsg));
				return null;
			}
			
			String title = request.getParameter("title");
			String content = request.getParameter("content");
			
			System.out.println(title + "\\n" + content);
			String url = request.getRequestURL().toString();
			String to = request.getParameter("to");
			String username = url.substring(url.lastIndexOf("/")+1, url.lastIndexOf("."));

			User u = User.findByUid(uid);
			
			if(u == null || !u.getUsr().equals(username)){
				rmsg.setStatus(300);
				rmsg.setMessage("错误的用户");
				out.write(RMessage.getJson(rmsg));
				return null;
			}
			
			
			Notification nf = new Notification();
			nf.setContent(content);
			nf.setFrom(u.getUsr());
			nf.setNtime(new Date());
			nf.setRead(Notification.UNREAD);
			nf.setTitle(title);
//			nf.setTo(User.findByUsr(to).getUid());
			
			if(NotificationService.addNotification(nf)){
				rmsg.setStatus(200);
				rmsg.setMessage("OK");
			}else{
				rmsg.setStatus(300);
				rmsg.setMessage("系统繁忙，请稍后再试！");
			}
			
			out.write(RMessage.getJson(rmsg));
			
			
		}catch(Exception e){
			rmsg.setStatus(300);
			rmsg.setMessage(e.getCause().toString());
			out.write(RMessage.getJson(rmsg));
		}finally{
			out.flush();
			out.close();
		}
		return null;
		
	}
}